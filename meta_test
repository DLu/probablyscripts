#!/usr/bin/python
import subprocess
import argparse
import re
import rospkg
from colorama import Fore, init
from ros_introspection.package import Package
init()

def easy_call(cmd):
    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    output, err = p.communicate()
    #print p.returncode
    #print output
    #print err
    return p.returncode, output, err

def run_tests(pkg_name):
    ret, o, e = easy_call(['catkin', 'build', pkg_name, '--no-deps', '--catkin-make-args', 'run_tests'])
    if ret != 0:
        return False
    ret, o, e = easy_call(['catkin', 'test', pkg_name, '--no-deps'])
    return ret == 0

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('meta_package')
    args = parser.parse_args()

    package_path = rospkg.RosStack().get_path(args.meta_package)
    metapkg = Package(package_path)
    pkgs = metapkg.manifest.get_packages('run')
    maxlen = max([len(str(pkg)) for pkg in pkgs])
    fmt_s = '%%%ds' % maxlen
    for pkg in sorted(pkgs):
        print fmt_s % pkg,
        if run_tests(pkg):
            print Fore.GREEN + 'Pass!' + Fore.RESET
        else:
            print Fore.RED + 'Fail!' + Fore.RESET

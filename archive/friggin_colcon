#!/usr/bin/python3

import argparse
import pathlib
import subprocess


def get_workspace_root(starting):
    folder = starting
    while folder:
        if (folder / 'src').exists() and (folder / 'build').exists():
            return folder
        elif folder.parent == folder:
            return
        else:
            folder = folder.parent


def get_package_names(starting):
    # Start by looking up the hierarchy
    folder = starting
    while folder:
        if (folder / 'package.xml').exists():
            return [folder.stem]
        elif folder.parent == folder:
            folder = None
        else:
            folder = folder.parent

    # Try looking in all subfolders
    queue = [starting]
    found = []
    while queue:
        folder = queue.pop(0)
        if (folder / 'package.xml').exists():
            found.append(folder.stem)
            continue
        for path in folder.iterdir():
            if path.is_dir():
                queue.append(path)

    if not found:
        raise RuntimeError('No packages found')


parser = argparse.ArgumentParser()
parser.add_argument('-t', '--this', action='store_true')
parser.add_argument('-n', '--no-deps', action='store_true')
parser.add_argument('-x', '--test', action='store_true')
parser.add_argument('-m', '--mute', action='store_true')
args, unknown_args = parser.parse_known_args()

current = pathlib.Path('.').resolve()
root = get_workspace_root(current)

command = ['colcon', 'build', '--event-handlers', 'desktop_notification-', 'status-']

if args.this or args.no_deps:
    if args.no_deps:
        command.append('--packages-select')
    else:
        command.append('--packages-up-to')
    command += get_package_names(current)

command += unknown_args

command += ['--cmake-args', '-DCMAKE_BUILD_TYPE=Release']

if args.test:
    print(' '.join(command))
else:
    code = subprocess.call(command, cwd=root)
    if not args.mute:
        if code == 0:
            sound = 'smw_power-up.wav'
        else:
            sound = 'smw_pipe.wav'
        subprocess.call(['aplay', '-q', '/home/dlu/Sounds/' + sound])

    exit(code)
